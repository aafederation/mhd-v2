@mixin button-basics {
  display: inline-block;
  font: inherit;
  font-size: get-size("400");
  line-height: 1;
  text-decoration: none;
  margin: 0;

  cursor: pointer;
}
.button {
  @include button-basics;
  text-align: left;
  padding: var(--button-padding, 0.5rem 1rem 0.5rem 1rem);
  color: get-color("black");
  border: $stroke-width solid get-color("secondary");
  border-radius: 5px;
  text-transform: uppercase;

  @include apply-utility("weight", "black");

  /// Only applies background where utility is not present
  &:not([class*="bg-"]) {
    background: get-color("secondary");
  }

  /// We absolutely want this hover state *regardless* of what
  /// tokens are present at any given time. This is to ensure consistency
  &:hover {
    background: get-color("powder");
    color: get-color("primary");
  }

  &:focus:not(:hover) {
    outline: none;
    outline-offset: -10px;
    border-color: get-color("tertiary");
  }

  &:hover:focus {
    outline: 1px solid get-color("powder");
    outline-offset: 1px;
  }

  &:active {
    transform: scale(0.99);
  }

  // 100% width exception
  &[data-size="full-width"] {
    width: 100%;
    display: flex;
  }

  /// Size exeptions
  &[data-size="large"] {
    font-size: get-size("700");
  }
  /// Type exeptions
  &[data-size="pill"] {
    border: none;
    background: get-color("powder");
    color: get-color("dark");
    font-size: get-size("400") * 0.8;
    border-radius: 1rem;

    &:hover {
      background: get-color("primary");
      color: get-color("white");
    }
  }
  &[data-variant="not-link"] {
    cursor: auto;
  }
}
.after-cross {
  &:after {
    font-family: "ElegantIcons";
    content: "\51";
    margin-left: 5px;
  }
}
// Active filters
ul {
  button {
    @include button-basics;
    text-align: start;
    width: 100%;
    margin: 0.1rem 0rem 0rem 0rem;
    padding: 0.5rem 1rem 0.5rem 0.25rem;

    border: none;
    background: get-color("white");
    color: get-color("dark");
    font-size: get-size("400") * 0.9;
    border-radius: 1rem;

    &:before {
      font-family: "ElegantIcons";
      content: "\56";
      margin-left: 5px;
      margin-right: 5px;
    }
    &:hover {
      background: get-color("powder");
      border-color: get-color("dark");
      color: get-color("primary");
    }
    &:focus:not(:hover) {
      outline: none;
    }
    &:hover:focus {
      outline: none;
    }

    &.active {
      background-color: get-color("slate");
      &:before {
        font-family: "ElegantIcons";
        content: "\5a";
        margin-left: 5px;
      }
    }
    // Filters with no current filtered results
  }
}
